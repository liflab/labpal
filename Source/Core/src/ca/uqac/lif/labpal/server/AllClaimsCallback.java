/*
  LabPal, a versatile environment for running experiments on a computer
  Copyright (C) 2015-2022 Sylvain Hallé

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package ca.uqac.lif.labpal.server;

import java.util.Calendar;

import ca.uqac.lif.jerrydog.CallbackResponse;
import ca.uqac.lif.jerrydog.Server;
import ca.uqac.lif.jerrydog.CallbackResponse.ContentType;
import ca.uqac.lif.labpal.util.FileHelper;
import ca.uqac.lif.labpal.Laboratory;
import ca.uqac.lif.labpal.claim.Claim;
import ca.uqac.lif.labpal.claim.Troolean;
import ca.uqac.lif.labpal.latex.LatexExportable;

import com.sun.net.httpserver.HttpExchange;

/**
 * Callback to download all claims as a single LaTeX file.
 * 
 * @author Sylvain Hallé
 *
 */
public class AllClaimsCallback extends LaboratoryCallback
{
	protected static final String s_barberPoleCode =  FileHelper.internalFileToString(AllPlotsLatexCallback.class, "resource/claim-barber-pole.tex");
	
  public AllClaimsCallback(LabPalServer s)
  {
    super(s, Method.GET, "/claims/tex");
  }

  @Override
  public CallbackResponse process(HttpExchange t)
  {
    CallbackResponse response = new CallbackResponse(t);
    response.setContentType(ContentType.LATEX);
    String filename = Server.urlEncode("labpal-claims.tex");
    response.setAttachment(filename);
    response.setContents(getLatexFile());
    return response;
  }

  /**
   * Generates the LaTeX file
   * 
   * @return The contents of the file
   */
  public String getLatexFile()
  {
    StringBuilder out = new StringBuilder();
    out.append("% ----------------------------------------------------------------")
        .append(FileHelper.CRLF);
    out.append("% File generated by LabPal ").append(Laboratory.s_versionString)
        .append(FileHelper.CRLF);
    out.append("% Date:     ").append(String.format("%1$te-%1$tm-%1$tY", Calendar.getInstance()))
        .append(FileHelper.CRLF);
    out.append("% Lab name: ").append(m_server.getLaboratory().getName()).append(FileHelper.CRLF);
    out.append("%").append(FileHelper.CRLF);
    out.append("% ----------------------------------------------------------------")
        .append(FileHelper.CRLF).append(FileHelper.CRLF);
    out.append(s_barberPoleCode);
    out.append(FileHelper.CRLF);
    for (Claim c : m_server.getLaboratory().getClaims())
    {
    	Troolean.Value verdict = c.evaluate();
    	out.append("% ").append(c.getStatement()).append(FileHelper.CRLF);
    	out.append("% Nickname: \\").append(c.getNickname()).append(FileHelper.CRLF);
    	out.append("% Status: ").append(verdict).append(FileHelper.CRLF);
    	out.append("\\newcommand{\\").append(c.getNickname()).append("}{");
      boolean barber_pole = verdict != Troolean.Value.TRUE;
      if (barber_pole)
      {
      	out.append("\\myclaimstripbox{");
      }
      out.append(LatexExportable.escape(c.getStatement()));
      if (barber_pole)
      {
      	out.append("}");
      }
      out.append("}").append(FileHelper.CRLF).append(FileHelper.CRLF);
    }
    return out.toString();
  }
}
